akka {
  stdout-loglevel = off // defaults to WARNING can be disabled with off. The stdout-loglevel is only in effect during system startup and shutdown
  log-dead-letters-during-shutdown = off
  loglevel = off
  log-dead-letters = off
  log-config-on-start = off // Log the complete configuration at INFO level when the actor system is started

  actor {
    serialize-messages = off // when on, the akka framework will determine whether or not messages can be serialized, else the plugin

    debug {
      receive = on // log all messages sent to an actor if that actors receive method is a LoggingReceive
      autoreceive = off // log all special messages like Kill, PoisoffPill etc sent to all actors
      lifecycle = off // log all actor lifecycle events of all actors
      fsm = off // enable logging of all events, transitioffs and timers of FSM Actors that extend LoggingFSM
      event-stream = off // enable logging of subscriptions (subscribe/unsubscribe) on the ActorSystem.eventStream
    }
  }

  persistence {
    journal.plugin = "inmemory-journal"
    snapshot-store.plugin = "inmemory-snapshot-store"
  }
}

inmemory-journal {
  event-adapters {
    adapter-a = "akka.stream.alpakka.persistence.writer.EventAdapterA"
  }
  event-adapter-bindings {
    "akka.stream.alpakka.persistence.writer.MyMessage" = adapter-a
  }
}

inmemory-read-journal {
  # use the event adapters from inmemory-journal as this plugin will write events
  write-plugin = "inmemory-journal"
}

akka.persistence.journal.leveldb {
  dir = "target/journal"
  event-adapters {
    adapter-b = "akka.stream.alpakka.persistence.writer.EventAdapterB"
  }
  event-adapter-bindings {
    "akka.stream.alpakka.persistence.writer.MyMessage" = adapter-b
  }
}

akka.persistence.query.journal.leveldb {
  # use the event adapters from leveldb-journal as this plugin will write events
  write-plugin = "akka.persistence.journal.leveldb"
}

