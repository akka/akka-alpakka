language: scala

services:
  - docker

# make comparing to origin/master work and fetch full history for correct current and previous version detection
git:
  depth: 500

addons:
  hosts:
    # to run tests locally, these hostnames need to resolve to localhost IP
    - hbase
  apt:
    sources:
      # Official debian package for AdoptOpenJDK from https://adoptopenjdk.net/installation.html#linux-pkg
      - sourceline: deb https://adoptopenjdk.jfrog.io/adoptopenjdk/deb/ xenial main
        key_url: https://adoptopenjdk.jfrog.io/adoptopenjdk/api/gpg/key/public
    packages:
      - adoptopenjdk-8-hotspot

before_install:
  - whereis java
  # build, test and release using JDK 8 to make sure alpakka works with it
  - export JAVA_HOME=/usr/lib/jvm/adoptopenjdk-8-hotspot-amd64
  - export PATH=/usr/lib/jvm/adoptopenjdk-8-hotspot-amd64/bin:$PATH
  - java -version

# default script for jobs, that do not have any specified
script: ./scripts/travis.sh

jobs:
  include:
    - stage: drop-travis-caches
      script:
        - rm -rf $HOME/.cache/coursier
        - rm -rf $HOME/.ivy2/cache
        - rm -rf $HOME/.sbt
        - rm -rf $HOME/.jabba
      name: "drop-travis-caches"

    - stage: test
      name: ftp
      env:
      - PRE_CMD="docker-compose up -d ftp sftp squid"
#    - name: "Publish artifacts for Scala 2.13"
#      env: CMD="ci-release"
#      script: openssl aes-256-cbc -K $encrypted_74014e1c3c6a_key -iv $encrypted_74014e1c3c6a_iv -in .travis/travis_gpg_secret.enc -out .travis/travis_gpg_secret.gpg -d && export PGP_SECRET=$(cat .travis/travis_gpg_secret.gpg) && ./scripts/travis.sh
#    - script: openssl aes-256-cbc -K $encrypted_bbf1dc4f2a07_key -iv $encrypted_bbf1dc4f2a07_iv -in .travis/travis_alpakka_rsa.enc -out .travis/id_rsa -d && eval "$(ssh-agent -s)" && chmod 600 .travis/id_rsa && ssh-add .travis/id_rsa && sbt -jvm-opts .jvmopts-travis docs/publishRsync
#      name: "Publish API and reference documentation"

stages:
  - name: drop-travis-caches
    # to drop caches trigger a custom build with
    # env:
    #   global:
    #     - RUN_DROP_TRAVIS_CACHES_STAGE=true
    if: env(RUN_DROP_TRAVIS_CACHES_STAGE) = true

  # runs on master commits and PRs
  - name: check
    if: NOT tag =~ ^v

  # runs on master commits and PRs
  - name: test
    if: NOT tag =~ ^v

#  # runs on main repo master commits or version-tagged commits
#  - name: publish
#    if: repo = akka/alpakka AND ( ( branch = master AND type = push ) OR tag =~ ^v )

after_failure:
  - docker-compose logs
  - find . -name "*.log" -exec ./scripts/cat-log.sh {} \;

before_cache:
  - find $HOME/.ivy2 -name "ivydata-*.properties" -print -delete
  - find $HOME/.sbt  -name "*.lock"               -print -delete

cache:
  directories:
    - $HOME/.cache/coursier
    - $HOME/.ivy2/cache
    - $HOME/.sbt
    - $HOME/.jabba
  timeout: 900

env:
  global:
    - RUN_DROP_TRAVIS_CACHES_STAGE=true

branches:
  only:
    - master
    - release-3.0
    # allow release tags
    - /^v\d+\.\d+(\.\d+)?(-\S*)?$/
